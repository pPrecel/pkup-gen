// Code generated by mockery v2.33.3. DO NOT EDIT.

package automock

import (
	compose "github.com/pPrecel/PKUP/pkg/compose"
	config "github.com/pPrecel/PKUP/pkg/config"

	mock "github.com/stretchr/testify/mock"
)

// Compose is an autogenerated mock type for the Compose type
type Compose struct {
	mock.Mock
}

// ForConfig provides a mock function with given fields: _a0, _a1
func (_m *Compose) ForConfig(_a0 *config.Config, _a1 compose.Options) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*config.Config, compose.Options) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewCompose creates a new instance of Compose. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCompose(t interface {
	mock.TestingT
	Cleanup(func())
}) *Compose {
	mock := &Compose{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
